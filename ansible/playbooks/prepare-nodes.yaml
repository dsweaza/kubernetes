---
- name: Prepare K8 Machines for RKE
  hosts: k8s
  become: yes
  ignore_errors: yes
  tasks:
  
  - name: Load kernel modules for RKE
    modprobe:
      name: "{{ item }}"
      state: present
    with_items: "{{ kernel_modules }}"
 
  - name: Apt Update
    apt:
      update_cache: yes
  
  - name: Remove older docker versions if present
    apt:
      name:
        - docker-ce 
        - docker-ce-cli 
        - containerd.io
      state: absent
      
  - name: Ensure packages to allow apt to use repository over HTTPS
    apt:
      name:
        - apt-transport-https
        - ca-certificates
        - curl
        - software-properties-common
      state: present

  - name: Add Docker's official apt key.
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      id: 9DC858229FC7DD38854AE2D88D81803C0EBFCD88
      state: present
    register: add_key
    ignore_errors: true

  - name: Add Docker apt key if failed
    shell: "curl -sSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -"
    args:
      warn: no
    when: add_key is failed  

  - name: Add Docker stable repository.
    apt_repository:
      repo: "deb [arch=amd64] https://download.docker.com/linux/{{ ansible_distribution|lower }} {{ ansible_distribution_release }} stable"
      state: present
      update_cache: yes
  
  - name: Apt Update
    apt:
      update_cache: yes
      
  - name: Install Docker from Apt
    apt:
      name:
        - docker-ce 
        - docker-ce-cli 
        - containerd.io
        
  - name: Disable SWAP
    shell: swapoff -a

  - name: Open TCP 6443
    shell: iptables -A INPUT -p tcp --dport 6443 -j ACCEPT

  - name: Configure sshd
    lineinfile:
      path: "/etc/ssh/sshd_config"
      regex: "^(#)?{{item.key}}"
      line: "{{item.key}} {{item.value}}"
      state: present
    loop:
      - { key: "AllowTcpForwarding", value: "yes" }
    notify:
      - restart sshd

  - name: Modify sysctl entries
    sysctl:
      name: '{{ item.key }}'
      value: '{{ item.value }}'
      sysctl_set: yes
      state: present
      reload: yes
    with_items:
      - {key: net.bridge.bridge-nf-call-ip6tables, value: 1}
      - {key: net.bridge.bridge-nf-call-iptables,  value: 1}
      - {key: net.ipv4.ip_forward,  value: 1}
    
  - name: Create group for docker
    group:
      name: docker
    register: group
  
  - name: Setup ansible user as part of docker group
    user:
      name: ansible
      groups: docker
      append: yes
    register: docker_user

  handlers:
    - name: restart sshd
      service: name=sshd state=restarted

  vars:
    kernel_modules:
      - br_netfilter
      - ip6_udp_tunnel
      - ip_set
      - ip_set_hash_ip
      - ip_set_hash_net
      - iptable_filter
      - iptable_nat
      - iptable_mangle
      - iptable_raw
      - nf_conntrack_netlink
      - nf_conntrack
      - nf_defrag_ipv4
      - nf_nat     
      - nfnetlink
      - udp_tunnel
      - veth
      - vxlan
      - x_tables
      - xt_addrtype
      - xt_conntrack
      - xt_comment
      - xt_mark
      - xt_multiport
      - xt_nat
      - xt_recent
      - xt_set
      - xt_statistic
      - xt_tcpudp